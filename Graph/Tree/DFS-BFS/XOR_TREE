// link: https://codeforces.com/contest/429/problem/A
// sol link: https://codeforces.com/contest/429/submission/137829429

//editorial is good , this problem is kind of lazy propogation of segment trees 
//Readable editorial: https://docs.google.com/document/d/1FlIR-QgiWFT-PH4QzyOTqmLFyqRus8d4Bini9gnKeSw/edit?usp=sharing

#include <bits/stdc++.h>
using namespace std;
 
#define endl '\n' 
#define int long long 
#define ll long long 
#define pb push_back
#define vi vector<int>
#define watch(x) cout << (#x) << " -> "  << (x) << endl
#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define all(x) (x).begin(), (x).end()

const int N=1e5+5;
int  n; 
vi xor_tree[N];
vi init(N);
vi goal(N);

vi pick;

void dfs(int node,int par, int odd_op, int even_op, int lvl){

    init[node] ^= (lvl&1) ? (odd_op%2) : (even_op%2);
   

    if(init[node]!=goal[node]){
        pick.pb(node);

        if(lvl&1)odd_op+=1;
        else even_op+=1;
    }

    for(auto c_node: xor_tree[node]){
        if(c_node == par)continue;

        dfs(c_node, node, odd_op, even_op, lvl+1);
    }
}

void solve() {
     int i;
     cin>>n;

    for(i=0;i<n-1;i++){
        int u,v;
        cin>>u>>v;

        xor_tree[u].pb(v);
        xor_tree[v].pb(u);
    }

    for(i=1;i<=n;i++){
        cin>>init[i];
    }

    for(i=1;i<=n;i++){
        cin>>goal[i];
    }

    dfs(1, -1,  0, 0, 1);

    cout<<pick.size()<<endl;

    for(auto vertex:pick){
        cout<<vertex<<endl;
    }

}

 
int32_t main()
{
    fast_cin();

    ll tc=1;
    // cin >> tc;

    while (tc--) 
     {
        solve();
     }
    return 0;
}
