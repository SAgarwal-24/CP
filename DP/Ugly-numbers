/*    
ugly-numbers
https://www.geeksforgeeks.org/ugly-numbers/
--------
Time Complexity: O(n) 
Auxiliary Space: O(n)
----------
Alter : Binary Search 
Time Complexity: O(log N)
Auxiliary Space: O(1)
-----------
  i/p: n=10000
  o/p: 288325195312500000 = (2^5)*(3^10)*(5^16) nearly 10^17

*/

#include <bits/stdc++.h>
using namespace std;
#define ull unsigned long long


 
//User function template for C++

class Solution{
public:	


	ull getNthUglyNo(int n) {
	   
	  ull ans=0,i,j,c=0;
	  ull two=1,three=1,fiv=1;
	  vector<ull>dp(10001);
	  dp[1]=1;
	  
	  i=2;
	  while(i<=n){
	      
	      //Checking nearmost next valid ugly nos take min of it at each step
	      ull x=min(dp[fiv]*5,min(dp[two]*2, dp[three]*3));
	      dp[i]=x;
	      
	      //update pointers
	      if(x==dp[fiv]*5)fiv++;
	      if(x==dp[two]*2)two++;
	      if(x==dp[three]*3)three++;
	      
	      i++;
	      
	  }
	  
	  /* ------- Ugly nos ------
	  for(i=0;i<=n;i++){
	      cout<<dp[i]<<" ";
	  }
	  cout<<endl;
	  */
	  
	  ans=dp[n];
	
	   return ans;
	}
	
	
};



int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        Solution ob;
        auto ans = ob.getNthUglyNo(n);
        cout << ans << "\n";
    }
    return 0;
}
