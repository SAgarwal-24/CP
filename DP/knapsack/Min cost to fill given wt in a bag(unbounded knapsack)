/*
https://www.geeksforgeeks.org/minimum-cost-to-fill-given-weight-in-a-bag/
*/

#include <bits/stdc++.h>
using namespace std;

#include <bits/stdc++.h>
using namespace std;


class Solution{
		

	public:
	int minimumCost(int cost[], int n, int W) 
	{ 
       int ans=0, i, j;
       
       int dp[1002]={0};
       fill(dp,dp+W+1,1e9);
       
       //dp[i] = min_cost_to_fill_(i kg)_bag
       
       dp[0]=0; // 0 cost to fill - 0 kg bag
       
    
       
       for(i=1;i<=n;i++){
           
           if(cost[i-1]==-1)continue; //this packet is unavailable
           
           for(j=i;j<=W;j++){
               
            dp[j] = min(dp[j], dp[j-i] + cost[i-1]);  
               
           }
       }
       
       ans=dp[W]==1e9?-1:dp[W];
       
       return ans;
	} 
};

/* ------ Tcs ---
I/p:
9 6
10 10 5 17 -1 13 19 9 15
o/p:10
----------
I/p:
2 200
-1 -1
o/p:10
-1

*/

// { Driver Code Starts.
int main() 
{
   	
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n, w;
        cin >> n >> w;

        int a[n];

        for(int i = 0; i < n; i++)
        	cin >> a[i];

   
	    Solution ob;
	    cout << ob.minimumCost(a, n, w) << "\n";
	     
    }
    return 0;
} 
