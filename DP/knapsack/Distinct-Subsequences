/*
https://leetcode.com/problems/distinct-subsequences/
-----
Given two strings s and t, return the number of distinct sequences of s which equals t.

-> this kind of 0/1 knapsack - where we have to do simple exculsion or inclusion for each character
*/

class Solution {
public:
    
    int ans=0, n1=0, n2=0;
    int dp[1001][1001];
    
    int subseq(string &s, string &t,int i, int j){
         
        if(j==n2){
            return 1;
        }
            
        if(i==n1)
            return 0;
        
        if(dp[i][j]!=-1)
             return dp[i][j];
        
        
        int op1=0,op2=0;
        
        op1 = subseq(s,t,i+1,j);
        
        if(s[i]==t[j])
           op2 =  subseq(s,t,i+1,j+1);
        
        return dp[i][j] = op1 + op2;
        
        
    }
    
    int numDistinct(string s, string t) {
        
        this->n1 = s.size();
        this->n2 = t.size();
        
        memset(dp,-1,sizeof(dp));
        ans = subseq(s,t,0,0);
        
        return ans;
    }
};

/*
---------- Some tcs----------
"rabbbit"
"rabbit"
"babgbag"
"bag"
"aaaabbaac"
"aabc"
"aaaaaaaaabbbbbbbbbaaaaaaaccccc"
"abac"
"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcccccccccccccccccccccccccccccccccccccccccccccddddddddddddddddddddddddddddddddddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
"abcda"
*/
