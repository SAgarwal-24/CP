/*
Perfect Sum Problem (Count of Subsets Sum with a Given Sum)

https://practice.geeksforgeeks.org/problems/perfect-sum-problem5633/1#

*/

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{

	public:
	int mod=1e9+7;
	 
	void print( int t[], int sum){
	     for(int j=0;j<=sum;j++){
            cout<<t[j]<<" ";
        }
        cout<<endl;
	}
	
	int perfectSum(int a[], int n, int sum)
	{
        int i, j, ans=0;
        
        //  t[sum]=no of subsets with given sum 
        //  t[i]=no of ways to make reqd subset 
        //  t[i]= include + exclude
        //  t[i]= no of ways by including ith element and excluding ith element 
        
        int t[sum+1]={0};
        t[0]=1;   //  bcz we can achieve 0 sum always by 1-way ie not selecting anyone 
        
        
        for(i=0;i<n;i++){
            
            for(j=sum;j>=a[i];j--){
                
                t[j]=(t[j]+t[j-a[i]])%mod; //t[j]=exclude + include 
            }
            
            //cout<<a[i]<<": "; print(t,sum); uncoment to understand 
        }
        
      // print(t,sum);
        
         ans=t[sum];
        return ans;
	}
	  
};

// { Driver Code Starts.
int main() 
{
   	
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n, sum;

        cin >> n >> sum;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.perfectSum(a, n, sum) << "\n";
	     
    }
    return 0;
}
  // } Driver Code Ends
  
  
  /*  --- some tc---
  
  input: 
  96 185
6 10 1 4 7 1 9 5 10 5 3 5 10 1 5 4 4 3 8 10 10 7 4 1 6 7 6 6 8 3 4 4 2 7 7 1 9 6 5 9 10 9 5 1 2 2 4 5 4 3 4 5 9 10 8 4 6 3 1 5 8 7 8 9 3 5 1 1 2 5 1 3 6 8 3 7 9 8 3 4 2 8 8 10 7 7 5 4 2 8 9 9 4 6 7 8
  output:
  175398726
  
  
  */
