// link: https://codeforces.com/contest/1606/problem/C
// resource: https://www.youtube.com/watch?v=r-ZoM2ex-uk

#include <bits/stdc++.h>

#define all(c) c.begin(), c.end()
#define watch(x) cout << (#x) << " is " << (x) << endl
#define int long long

using namespace std;

template <typename C,
          typename T = std::decay_t<decltype(*begin(std::declval<C>()))>,
          typename std::enable_if<!std::is_same<C, std::string>::value>::type * = nullptr>
std::ostream &operator<<(std::ostream &os, const C &container)
{
    bool first = true;
    std::stringstream ss;
    ss << '[';
    for (const auto &x : container)
    {
        if (!first)
        {
            ss << ", ";
        }
        first = false;
        ss << x;
    }
    ss << ']';
    return os << ss.str();
}
template <class T1, class T2>
std::ostream &operator<<(std::ostream &os, const std::pair<T1, T2> &p)
{
    os << '{' << p.first << ", " << p.second << '}';
    return os;
}


int expo(int a, int b){

    // a^b  = a ^ (101...) = a^(binary format of b) = O(log(b))

    int res = 1;

    while(b){

        if(b&1)
            res = res * a;

        a = a*a;
        b = b>>1;
    }

    return res;

}



void solve(){

    int i,n,k,ans=0;
    cin>>n>>k;

    vector<int>deno(n,0);
    vector<int>coef(n,0);

    for(i=0;i<n;i++){
        int x;
        cin>>x;

        deno[i] = expo(10,x);
    }

  
    for(i=0;i<n-1;i++){

        coef[i] = deno[i+1]/deno[i]-1;
    }

    // cout<<deno<<endl;
    // cout<<coef<<endl;


    k++; // bcz we need to find amount of money for which atleast k+1 notes are needed
    

    for(i=0;i<n-1;i++){

      int cf =  min(k, coef[i]);
    
      ans += deno[i] * cf;

    //   cout<<cf<<", "<<deno[i] * cf<<endl;

       k = k-cf;
    }

    if(k>0)
     ans += deno[n-1]*k;

    cout<<ans<<endl;

    return;
}





int32_t main()
{

    int tc = 1;
    cin >> tc;

 
    while (tc--)
    {
        solve();
    }


    return 0;
}

