//based on prefix and suffix sum
// looks like dp but it is pure greedy
// https://codeforces.com/contest/1520/problem/E

#include <bits/stdc++.h>
using namespace std;
#define endl "\n" 
#define int long long
#define watch(x) cout << (#x) << " is " << (x) << endl
#define hh cout << endl
#define fast ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);

void print(int a[], int n){

      for(int i=1;i<=n;i++){
            cout<<a[i]<<" ";
        }
        cout<<endl;

}

int32_t main(){
fast

    int t; cin>>t;

    while(t--){
        int n,i; cin>>n;

        int a[n+1]={0};

        for(i=1;i<=n;i++){
            char ch; cin>>ch;
            a[i]=(ch=='*')?1:0;
        }

        int pre[n+2]={0}, suf[n+2]={0};

        for(i=1;i<=n;i++){
            pre[i]=pre[i-1];
            if(a[i]==1)pre[i]+=1;

            suf[n-i+1]=suf[n-i+2];
            if(a[n-i+1]==1)suf[n-i+1]+=1;
        }

       
        int lc[n+2]={0};
        int rc[n+2]={0};

        for(i=1;i<=n;i++){

            lc[i]=lc[i-1];
            lc[i]+=(a[i]==0)?pre[i-1]:0;

            rc[n-i+1]=rc[n-i+2];  
            rc[n-i+1]+=(a[n-i+1]==0)?suf[n-i+2]:0;
        }

       /* print(pre,n);  uncomment to understand 
        print(suf,n);
        print(lc,n);
        print(rc,n); */

       

        int ans=lc[0]+rc[1];

        for(i=1;i<=n;i++){

            ans=min(ans,lc[i]+rc[i+1]);
        }

        cout<<ans<<endl;

    }

return 0;
}
