//greedy - based
// link: https://www.codechef.com/NOV21B/problems/HILLSEQ

#include <bits/stdc++.h>

#define all(c) c.begin(), c.end()
#define int long long

using namespace std;



vector<int> rev(vector<int> s){

    reverse(all(s));

    return s;
}

void print(string s){

    for(auto x:s){
        cout<<x<<" ";
    }
}

void solve(){

    int n,i;
    cin>>n;

    int a[n];

    for(i=0;i<n;i++){
        cin>>a[i];
    }

    sort(a, a+n);

    int two=0, mx = -1;
    map<int,int>mp;

    for(i=0;i<n;i++){
        mp[a[i]]+=1;
        mx = max(mx, a[i]);
    }

    for(auto it:mp){

        if(it.second > 2){
            cout<<-1<<endl;
            return;
        }
        else if(it.second == 2){
            two++;
        }
    }

    if(mp[mx]>1){
        cout<<-1<<endl;
        return;
    }

    vector<int>s1,s2;

    for(auto it:mp){

        s1.push_back(it.first);

        if(it.second==2)
        s2.push_back(it.first);
    }

    int flag = 0;

    i=0;
    while(i<s1.size() and i<s2.size()){

        if(s1[i]<s2[i]){
            flag = 1;
            break;
        }
        else if(s1[i]>s2[i]){
            flag = 2;
            break;
        }

        i++;
    }

    if(flag<2){

        // s2 + rev(s1)

        for(auto num:s2)
        cout<<num<<" ";

        for(i=s1.size()-1; i>=0; i--)
        cout<<s1[i]<<" ";

    }
    else{
        //s1 + rev(s2)

        for(auto num:s1)
        cout<<num<<" ";

        for(i=s2.size()-1; i>=0; i--)
        cout<<s2[i]<<" ";
    }



    cout<<endl;

    return;
}

// 2 2 3 3 4 4 5 6 6 7

// s1 - 2 3 4 5 6 7
// s2 - 2 3 4 6 
// s1 < s2

// 2 3 4 6 |7 6 5 4 3 2   -> s2 + rev(s1) 
// 2 3 4 5 6 7| 6 4 3 2   -> s1 + rev(s2)

//----

// s1: 2 3 4 5  7
// s2: 2 3 4 

// 2 3 4 7 5 4 3 2  s2+rev(s1)
// 2 3 4 5 7 4 3 2
 
 //---------
 //8 3 2 1 43 3 9
 //1 2 3 3 8 9 43

 // 1 2 3 8 9 43
 // 3

 // 3 43 9 8 3 2 1

int32_t main()
{

   

     int tc = 1;
    cin >> tc;

 
    while (tc--)
    {
        solve();
    }


    return 0;
}

